syntax="proto3";

package chat_msg;
option java_package = "com.howcode.aqchat.message";

enum MsgCommand{
  //登录
  USER_LOGIN_CMD = 0;
  USER_LOGIN_ACK = 1;
  //心跳
  HEART_BEAT_CMD = 2;
  HEART_BEAT_ACK = 3;
  //加入房间
  JOIN_ROOM_CMD = 4;
  JOIN_ROOM_ACK = 5;
  //新建房间
  CREATE_ROOM_CMD = 6;
  CREATE_ROOM_ACK = 7;
  //离开房间
  LEAVE_ROOM_CMD = 8;
  LEAVE_ROOM_ACK = 9;
  //发送消息
  SEND_MSG_CMD = 10;
  SEND_MSG_ACK = 11;
  //消息广播
  BROADCAST_MSG_ACK = 12;
  //异常消息
  EXCEPTION_MSG = 13;
  //掉线消息
  OFFLINE_MSG = 14;
  //获取阿里sts凭证
  GET_STS_CMD = 15;
  GET_STS_ACK = 16;

  //退出登录
  USER_LOGOUT_CMD = 17;
  USER_LOGOUT_ACK = 18;
  //朋友离线
  OFFLINE_NOTIFY = 19;
  //同步聊天室聊天记录
  SYNC_CHAT_RECORD_CMD = 20;
  SYNC_CHAT_RECORD_ACK = 21;
  //根据userId恢复用户连接信息
  RECOVER_USER_CMD = 22;
  RECOVER_USER_ACK = 23;

  //加入房间通知
  JOIN_ROOM_NOTIFY = 24;
  //离开房间通知
  LEAVE_ROOM_NOTIFY = 25;

  //同步房间成员列表
  SYNC_ROOM_MEMBERS_CMD = 26;
  SYNC_ROOM_MEMBERS_ACK = 27;

  //撤回消息
  RECALL_MSG_CMD = 28;
  RECALL_MSG_ACK = 29;

  //撤回消息通知
  RECALL_MSG_NOTIFY = 30;

  //艾特消息通知
  AT_MSG_NOTIFY = 31;

  //流式消息通知
  STREAM_MSG_NOTIFY = 32;

  //邀请加入
  INVITE_JOIN_ROOM_CMD = 33;
  INVITE_JOIN_ROOM_ACK = 34;


  //=====AI空间=========
  //开启AI空间类型房间
  OPEN_AI_ROOM_CMD = 100;
  OPEN_AI_ROOM_CMD_ACK = 101;

  //关闭AI空间类型房间
  CLOSE_AI_ROOM_CMD = 102;
  CLOSE_AI_ROOM_CMD_ACK = 103;

  //发送消息
//  SEND_MSG_CMD = 104;
//  SEND_MSG_CMD_ACK = 105;

  //AI回复消息
  AI_REPLY_MSG_ACK = 106;

  //AI回复消息（流式）
  AI_REPLY_MSG_STREAM_ACK = 107;
}

//用户登录
message UserLoginCmd{
  string userName = 1;
  string userAvatar = 2;
}
//用户登录响应
message UserLoginAck{
  string userId = 1;
  string userName = 2;
  string userAvatar = 3;
}

//心跳
message HeartBeatCmd{
  string ping = 1;
}
message HeartBeatAck{
  string pong = 1;
}

//加入房间
message JoinRoomCmd{
  int32 roomNo = 2;
}
message JoinRoomAck{
  string roomId = 1;
  int32 roomNo = 2;
  string roomName = 3;
  int32 ai = 4;
}
//新建房间
message CreateRoomCmd{
  int32 roomNo = 1;
  string roomName = 2;
  //是否支持查看历史消息 0-不支持 1-支持
  int32 history = 3;
  //是否开启AI助手 0-不开启 1-开启
  int32 ai = 4;
}
message CreateRoomAck{
  string roomId = 1;
  int32 roomNo = 2;
  string roomName = 3;
  int32 ai = 4;
}
//离开房间
message LeaveRoomCmd{
  string roomId = 2;
}
message LeaveRoomAck{
  string roomId = 2;
}

//发送消息
message SendMsgCmd{
  //消息id
  string msgId = 1;
  string roomId = 2;
  MsgType msgType = 3;
  string msg = 4;
  string ext = 5;
}
//发送消息响应 是否成功
message SendMsgAck{
  //消息id
  string msgId = 1;
  string userId = 2;
  string roomId = 3;
  bool status = 4;
  string ext = 5;
}

//定义消息类型
enum MsgType{
  TEXT = 0;
  IMAGE = 1;
  //音频
  VOICE = 2;
  //视频
  VIDEO = 3;
  //文件
  FILE = 4;
}

//消息广播
message BroadcastMsgAck{
  User user = 1;
  string roomId = 2;
  string msgId = 3;
  MsgType msgType = 4;
  string msg = 5;
  string ext = 6;
}
//发送者信息
message User{
  string userId = 1;
  string userName = 2;
  string userAvatar = 3;
}

//异常消息
message ExceptionMsg{
  int32 code = 1;
  string msg = 2;
}


//掉线消息
message OfflineMsg{
  User user = 1;
  string roomId = 2;
}
//阿里sts凭证
message GetStsCmd{
  MsgType msgType = 1;
}
message GetStsAck{
  string accessKeyId = 1;
  string accessKeySecret = 2;
  string securityToken = 3;
  string region = 4;
  string bucket = 5;
  string uploadPath = 6;
  string endpoint = 7;
}

//退出登录
message UserLogoutCmd{
  string userId = 1;
}
message UserLogoutAck{
  string userId = 1;
}

//朋友离线
message OfflineNotify{
  User user = 1;
  string roomId = 2;
}

//同步聊天室聊天记录
message SyncChatRecordCmd{
  string roomId = 1;
}
message SyncChatRecordAck{
  string roomId = 1;
  repeated ChatRecord chatRecords = 2;
}
message ChatRecord{
  //消息id
  string msgId = 1;
  User user = 2;
  string message = 3;
  MsgType msgType = 4;
  string ext = 5;
  string createTime = 6;
}
//根据userId恢复用户连接信息
message RecoverUserCmd{
  string userId = 1;
}
message RecoverUserAck{
  string userId = 1;
  string userName = 2;
  string userAvatar = 3;
  Room room = 4;
}
//房间信息
message Room{
  string roomId = 1;
  int32 roomNo = 2;
  string roomName = 3;
  int32 ai = 4;
  repeated User members = 5;
}

//加入房间通知
message JoinRoomNotify{
  User user = 1;
  string roomId = 2;
}
//离开房间通知
message LeaveRoomNotify{
  User user = 1;
  string roomId = 2;
}

//同步房间成员列表
message SyncRoomMembersCmd{
  string roomId = 1;
}
message SyncRoomMembersAck{
  string roomId = 1;
  repeated User members = 2;
}

//撤回消息
message RecallMsgCmd{
  string roomId = 1;
  string msgId = 2;
}

message RecallMsgAck{
  string roomId = 1;
  string msgId = 2;
  string userId = 3;
  bool status = 4;
}

//撤回消息通知
message RecallMsgNotify{
  string roomId = 1;
  string msgId = 2;
  string userId = 3;
}

//艾特消息通知
message AtMsgNotify{
  string roomId = 1;
  string msgId = 2;
  string userId = 3; //发送人id
  string atUserId = 4; //被艾特人id
}

//流式消息通知
message StreamMsgNotify{
  string roomId = 1;
  string msgId = 2;
  User user = 3;
  int32 streamType = 4; //流类型 0-开始 1--结束
  string content = 5;
}

//邀请加入
message InviteJoinRoomCmd{
  string roomNo = 1;
  string userId = 2;
}

message InviteJoinRoomAck{
  string roomId = 1;
  User user = 2;
  Room room = 3;
}


//=========AI空间=========

//开启AI空间类型房间
message OpenAiRoomCmd {
  string userId = 1;
}
message OpenAiRoomCmdAck {
  string roomId = 1;
  repeated Assistant assistants = 2;
}

message Assistant{
  string userId = 1;
  string name = 2;
  string avatar = 3;
}

//关闭AI空间类型房间
message CloseAiRoomCmd {
  string roomId = 1;
}
message CloseAiRoomCmdAck {
  string roomId = 1;
}

//AI回复消息
message AiReplyMsgAck {
  string roomId = 1;
  User user = 2;
  string msgId = 3;
  string msg = 4;
  string ext = 5;
  MsgType msgType = 6;
  int32 status = 7; //1-成功
}